# Account Management System - Manual API Testing
# Use this file with REST Client extension in VS Code or similar HTTP client

### Variables
@baseUrl = http://localhost:3001
@authToken = Bearer your-jwt-token-here
@householdId = household-id-123
@accountId = account-id-123

### 1. Create Asset Account
POST {{baseUrl}}/accounts
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "Main Bank Account",
  "type": "ASSET",
  "subtype": "BANK",
  "currency": "IDR",
  "institutionId": null,
  "accountNumber": "1234567890"
}

### 2. Create Liability Account
POST {{baseUrl}}/accounts
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "Credit Card",
  "type": "LIABILITY",
  "subtype": "CREDIT_CARD",
  "currency": "IDR"
}

### 3. Get All Accounts
GET {{baseUrl}}/accounts
Authorization: {{authToken}}

### 4. Get Accounts with Filters
GET {{baseUrl}}/accounts?type=ASSET&currency=IDR&isActive=true
Authorization: {{authToken}}

### 5. Get Account by ID
GET {{baseUrl}}/accounts/{{accountId}}
Authorization: {{authToken}}

### 6. Update Account
PUT {{baseUrl}}/accounts/{{accountId}}
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "Updated Bank Account",
  "isActive": true
}

### 7. Get Account Balance
GET {{baseUrl}}/accounts/{{accountId}}/balance
Authorization: {{authToken}}

### 8. Get Account History
GET {{baseUrl}}/accounts/{{accountId}}/history?startDate=2024-01-01&endDate=2024-12-31
Authorization: {{authToken}}

### 9. Get Grouped Accounts
GET {{baseUrl}}/accounts/grouped
Authorization: {{authToken}}

### 10. Get Account Statistics
GET {{baseUrl}}/accounts/stats
Authorization: {{authToken}}

### 11. Get Net Worth
GET {{baseUrl}}/accounts/net-worth?currency=IDR
Authorization: {{authToken}}

### 12. Get Asset Subtypes
GET {{baseUrl}}/accounts/subtypes/ASSET
Authorization: {{authToken}}

### 13. Get Liability Subtypes
GET {{baseUrl}}/accounts/subtypes/LIABILITY
Authorization: {{authToken}}

### 14. Validate Account Integrity
POST {{baseUrl}}/accounts/{{accountId}}/validate
Authorization: {{authToken}}

### 15. Sync Account Balance
POST {{baseUrl}}/accounts/{{accountId}}/sync
Authorization: {{authToken}}

### 16. Soft Delete Account
DELETE {{baseUrl}}/accounts/{{accountId}}
Authorization: {{authToken}}

### Error Cases for Testing

### 17. Invalid Subtype (should return 400)
POST {{baseUrl}}/accounts
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "Invalid Account",
  "type": "ASSET",
  "subtype": "INVALID_SUBTYPE",
  "currency": "IDR"
}

### 18. Missing Required Fields (should return 400)
POST {{baseUrl}}/accounts
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "Incomplete Account"
}

### 19. Invalid UUID (should return 400)
GET {{baseUrl}}/accounts/invalid-uuid
Authorization: {{authToken}}

### 20. Non-existent Account (should return 404)
GET {{baseUrl}}/accounts/123e4567-e89b-12d3-a456-426614174000
Authorization: {{authToken}}

### 21. Invalid Account Type for Subtype (should return 400)
PUT {{baseUrl}}/accounts/{{accountId}}
Authorization: {{authToken}}
Content-Type: application/json

{
  "type": "LIABILITY",
  "subtype": "BANK"
}

### Performance Testing

### 22. Bulk Account Creation (for performance testing)
POST {{baseUrl}}/accounts
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "Performance Test Account 1",
  "type": "ASSET",
  "subtype": "CASH",
  "currency": "USD"
}

### 23. Filter Performance Test
GET {{baseUrl}}/accounts?type=ASSET&currency=IDR&viewType=COMBINED&isActive=true
Authorization: {{authToken}}

### Multi-Currency Testing

### 24. Create USD Account
POST {{baseUrl}}/accounts
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "USD Savings",
  "type": "ASSET",
  "subtype": "BANK",
  "currency": "USD"
}

### 25. Create EUR Account
POST {{baseUrl}}/accounts
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "EUR Investment",
  "type": "ASSET",
  "subtype": "INVESTMENT",
  "currency": "EUR"
}

### 26. Multi-Currency Net Worth
GET {{baseUrl}}/accounts/net-worth?currency=USD
Authorization: {{authToken}}

### View Type Testing

### 27. Individual View
GET {{baseUrl}}/accounts?viewType=INDIVIDUAL
Authorization: {{authToken}}

### 28. Partner Only View
GET {{baseUrl}}/accounts?viewType=PARTNER_ONLY
Authorization: {{authToken}}

### 29. Combined View
GET {{baseUrl}}/accounts?viewType=COMBINED
Authorization: {{authToken}}

### Institution Testing

### 30. Create Account with Institution
POST {{baseUrl}}/accounts
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "BCA Savings",
  "type": "ASSET",
  "subtype": "BANK",
  "currency": "IDR",
  "institutionId": "institution-id-123",
  "accountNumber": "1234567890"
}

### 31. Filter by Institution
GET {{baseUrl}}/accounts?institutionId=institution-id-123
Authorization: {{authToken}}

### Metadata Testing

### 32. Create Account with Metadata
POST {{baseUrl}}/accounts
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "Account with Metadata",
  "type": "ASSET",
  "subtype": "BANK",
  "currency": "IDR",
  "metadata": {
    "branch": "Jakarta Pusat",
    "accountManager": "John Doe",
    "openDate": "2024-01-01"
  }
}

### Edge Cases

### 33. Very Long Account Name
POST {{baseUrl}}/accounts
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "This is a very long account name that might test the validation limits of the system and see how it handles extremely long strings",
  "type": "ASSET",
  "subtype": "BANK",
  "currency": "IDR"
}

### 34. Special Characters in Name
POST {{baseUrl}}/accounts
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "Account with Special Characters !@#$%^&*()",
  "type": "ASSET",
  "subtype": "BANK",
  "currency": "IDR"
}

### 35. Unicode Characters
POST {{baseUrl}}/accounts
Authorization: {{authToken}}
Content-Type: application/json

{
  "name": "Rekening Bank 中文 العربية",
  "type": "ASSET",
  "subtype": "BANK",
  "currency": "IDR"
}
