# Transaction Engine Manual Tests
# Use these HTTP requests to manually test the transaction engine

### Create a simple expense transaction
POST http://localhost:3000/api/transactions
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN

{
  "amountCents": 50000,
  "currency": "IDR",
  "description": "Grocery shopping",
  "categoryId": "category-uuid",
  "merchant": "Supermarket ABC",
  "date": "2024-01-15",
  "accountId": "account-uuid",
  "tags": ["groceries", "food"]
}

### Create a transfer transaction
POST http://localhost:3000/api/transactions
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN

{
  "amountCents": 100000,
  "currency": "IDR",
  "description": "Transfer to savings",
  "date": "2024-01-15",
  "accountId": "checking-account-uuid",
  "transferAccountId": "savings-account-uuid"
}

### Create a transaction with splits
POST http://localhost:3000/api/transactions
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN

{
  "amountCents": 75000,
  "currency": "IDR",
  "description": "Mixed shopping",
  "date": "2024-01-15",
  "accountId": "account-uuid",
  "splits": [
    {
      "categoryId": "groceries-category-uuid",
      "amountCents": 50000,
      "description": "Food items"
    },
    {
      "categoryId": "household-category-uuid",
      "amountCents": 25000,
      "description": "Cleaning supplies"
    }
  ]
}

### Get transactions with filters
GET http://localhost:3000/api/transactions?page=1&limit=10&sortBy=date&sortOrder=desc
Authorization: Bearer YOUR_JWT_TOKEN

### Get transaction by ID
GET http://localhost:3000/api/transactions/transaction-uuid
Authorization: Bearer YOUR_JWT_TOKEN

### Update a transaction
PUT http://localhost:3000/api/transactions/transaction-uuid
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN

{
  "description": "Updated grocery shopping",
  "amountCents": 55000
}

### Categorize a transaction
PUT http://localhost:3000/api/transactions/transaction-uuid/category
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN

{
  "categoryId": "new-category-uuid"
}

### Add tags to a transaction
POST http://localhost:3000/api/transactions/transaction-uuid/tags
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN

{
  "tags": ["organic", "healthy"]
}

### Update transaction splits
PUT http://localhost:3000/api/transactions/transaction-uuid/splits
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN

{
  "splits": [
    {
      "categoryId": "groceries-category-uuid",
      "amountCents": 40000,
      "description": "Food items"
    },
    {
      "categoryId": "household-category-uuid",
      "amountCents": 15000,
      "description": "Cleaning supplies"
    }
  ]
}

### Validate transaction accounting
GET http://localhost:3000/api/transactions/transaction-uuid/validate
Authorization: Bearer YOUR_JWT_TOKEN

### Get transaction statistics
GET http://localhost:3000/api/transactions/stats?startDate=2024-01-01&endDate=2024-01-31
Authorization: Bearer YOUR_JWT_TOKEN

### Get category breakdown
GET http://localhost:3000/api/transactions/category-breakdown?startDate=2024-01-01&endDate=2024-01-31
Authorization: Bearer YOUR_JWT_TOKEN

### Search transactions
GET http://localhost:3000/api/transactions/search?query=grocery&page=1&limit=10
Authorization: Bearer YOUR_JWT_TOKEN

### Delete a transaction
DELETE http://localhost:3000/api/transactions/transaction-uuid
Authorization: Bearer YOUR_JWT_TOKEN
